<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.flower.dao.OrderitemMapper">
  <resultMap id="BaseResultMap" type="com.yc.flower.bean.Orderitem">
    <id column="iid" jdbcType="INTEGER" property="iid" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="subtotal" jdbcType="DOUBLE" property="subtotal" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="oid" jdbcType="INTEGER" property="oid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    iid, count, subtotal, fid, oid
  </sql>
  <select id="selectByExample" parameterType="com.yc.flower.bean.OrderitemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderitem
    where iid = #{iid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderitem
    where iid = #{iid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.flower.bean.OrderitemExample">
    delete from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.flower.bean.Orderitem">
    insert into orderitem (iid, count, subtotal, 
      fid, oid)
    values (#{iid,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, #{subtotal,jdbcType=DOUBLE}, 
      #{fid,jdbcType=INTEGER}, #{oid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.flower.bean.Orderitem">
    insert into orderitem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iid != null">
        iid,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="subtotal != null">
        subtotal,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="oid != null">
        oid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iid != null">
        #{iid,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.flower.bean.OrderitemExample" resultType="java.lang.Long">
    select count(*) from orderitem
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orderitem
    <set>
      <if test="record.iid != null">
        iid = #{record.iid,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.subtotal != null">
        subtotal = #{record.subtotal,jdbcType=DOUBLE},
      </if>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orderitem
    set iid = #{record.iid,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      subtotal = #{record.subtotal,jdbcType=DOUBLE},
      fid = #{record.fid,jdbcType=INTEGER},
      oid = #{record.oid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.flower.bean.Orderitem">
    update orderitem
    <set>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="subtotal != null">
        subtotal = #{subtotal,jdbcType=DOUBLE},
      </if>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=INTEGER},
      </if>
    </set>
    where iid = #{iid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.flower.bean.Orderitem">
    update orderitem
    set count = #{count,jdbcType=INTEGER},
      subtotal = #{subtotal,jdbcType=DOUBLE},
      fid = #{fid,jdbcType=INTEGER},
      oid = #{oid,jdbcType=INTEGER}
    where iid = #{iid,jdbcType=INTEGER}
  </update>
  
  <insert id="insertItems" parameterType="java.lang.Integer" >
  	insert into orderitem select NULL, a.count, a.count * b.shop_price, a.fid, #{oid,jdbcType=INTEGER} FROM
  		cart a JOIN flower b ON a.fid = b.fid WHERE a.uid = #{uid,jdbcType=INTEGER}
  </insert>
  <select id="queryId" resultMap="BaseResultMap">
      select * from orderitem where oid=#{oid,jdbcType=INTEGER}
  </select>
  <select id="queryItembyOid" resultMap="BaseResultMap">
      select * from  orderitem a left join orders b on a.oid = b.oid left join flower c 
      on a.fid = c.fid where b.oid=#{oid,jdbcType=INTEGER}
  </select>
</mapper>