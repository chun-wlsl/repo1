<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.flower.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.yc.flower.bean.Order">
    <id column="oid" jdbcType="INTEGER" property="oid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="total" jdbcType="VARCHAR" property="total" />
    <result column="otime" jdbcType="TIMESTAMP" property="otime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="addr" jdbcType="VARCHAR" property="addr" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <association property="user" select="com.yc.flower.dao.UserMapper.queryByUid" column="uid"></association>
    <collection property="orderitem" ofType="com.yc.flower.bean.Orderitem" select="com.yc.flower.dao.OrderitemMapper.queryId" column="oid"></collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, uid, name, total, otime, state, addr, phone
  </sql>
  <select id="selectByExample" parameterType="com.yc.flower.bean.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yc.flower.bean.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yc.flower.bean.Order">
    insert into order (oid, uid, name, 
      total, otime, state, 
      addr, phone)
    values (#{oid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{total,jdbcType=VARCHAR}, #{otime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{addr,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.flower.bean.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="otime != null">
        otime,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="addr != null">
        addr,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=VARCHAR},
      </if>
      <if test="otime != null">
        #{otime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yc.flower.bean.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=VARCHAR},
      </if>
      <if test="record.otime != null">
        otime = #{record.otime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.addr != null">
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set oid = #{record.oid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=VARCHAR},
      otime = #{record.otime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      addr = #{record.addr,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.flower.bean.Order">
    update order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=VARCHAR},
      </if>
      <if test="otime != null">
        otime = #{otime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="addr != null">
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.flower.bean.Order">
    update order
    set uid = #{uid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      total = #{total,jdbcType=VARCHAR},
      otime = #{otime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      addr = #{addr,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  
  <insert id="insertOrder" parameterType="com.yc.flower.bean.Order">
    insert into orders values(null, #{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{total,jdbcType=VARCHAR},now(),#{state,jdbcType=INTEGER}, 
      #{addr,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.yc.flower.bean.Order">
    update orders set uid = #{uid,jdbcType=INTEGER},name = #{name,jdbcType=VARCHAR},total = #{total,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},addr = #{addr,jdbcType=VARCHAR},phone = #{phone,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByOid" parameterType="com.yc.flower.bean.Order">
    update orders set name = #{name,jdbcType=VARCHAR},total = #{total,jdbcType=VARCHAR},
      state = 1,addr = #{addr,jdbcType=VARCHAR},phone = #{phone,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <select id="selectOrders" resultMap="BaseResultMap">
      select * from orders a left join orderitem b on a.oid=b.oid left 
      	join flower c on b.fid=c.fid where a.uid=#{uid,jdbcType=INTEGER}
  </select>
  <update id="mksGetPro" parameterType="com.yc.flower.bean.Order">
   	  update orders set state=4 where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateState" parameterType="com.yc.flower.bean.Order">
   	  update orders set state=#{state,jdbcType=INTEGER} where oid= #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateState1" parameterType="com.yc.flower.bean.Order">
   	  update orders set state= state+1 where oid= #{oid,jdbcType=INTEGER}
  </update>
  <select id="queryByOid" resultMap="BaseResultMap">
      select * from orders where oid= #{oid,jdbcType=INTEGER}
  </select>
</mapper>